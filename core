#!/bin/bash

install() {
  # prepare vars
  local name="$PACKAGE_CORE_NAME"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  # files
  local tmp_file="./$name"
  local bin_file="$tmp_file"

  case $platform in
  darwin)
    case $arch in
    amd64) ;;

    *)
      log::error "[$(timestamp)] $platform unsupport arch: $arch"
      return 1
      ;;
    esac
    ;;
  linux)
    case $arch in
    amd64) ;;

    *)
      log::error "[$(timestamp)] $platform unsupport arch: $arch"
      return 1
      ;;
    esac
    ;;
  *)
    log::error "[$(timestamp)] unsupport platform: $platform"
    return 1
    ;;
  esac

  # prepare context
  cd $tmp_dir

  # reference: https://github.com/HDT3213/godis/releases
  # example:
  #   https://github.com/HDT3213/godis/releases/download/v1.2.8/godis-darwin
  #   https://github.com/HDT3213/godis/releases/download/v1.2.8/godis-linux
  # generate url
  local url="${PACKAGE_CORE_RELEASE_DOWNLOAD}/$PACKAGE_CORE_VERSION/${name}-${platform}"
  log::debug "[$(timestamp)][package][$name][$kernel][$arch] url: $url, file: ${tmp_file}, tmp_dir: $tmp_dir"

  # download
  log::info "[$(timestamp)][package][$name] downloading ..."
  os::download $tmp_file $url

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  os::install $bin_file $usr_bin_dir

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
